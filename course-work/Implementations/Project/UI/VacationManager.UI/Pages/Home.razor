@page "/"
@using VacationManager.UI.Api.Services.Abstractions
@using VacationManager.UI.Commons.Models
@using VacationManager.UI.Companies.Models
@using Radzen
@using Radzen.Blazor

@inject IApiService ApiService

<h3>Companies that trust in us:</h3>

<RadzenDataGrid TItem="CompanyReadModel"
                Data="@companies"
                Count="@totalCount"
                LoadData="@LoadData"
                AllowPaging="true"
                AllowSorting="true"
                PageSize="10"
                ColumnWidth="200px"
                AllowFiltering="false">
    <Columns>
        <RadzenDataGridColumn TItem="CompanyReadModel" Property="Name" Title="Name" />
        <RadzenDataGridColumn TItem="CompanyReadModel" Property="CreatedAt" Title="Created At" FormatString="{0:yyyy-MM-dd}" />
        <RadzenDataGridColumn TItem="CompanyReadModel" Property="CeoId" Title="CEO ID" />
    </Columns>
</RadzenDataGrid>

@code {
    IEnumerable<CompanyReadModel> companies;
    int totalCount = 0;

    private async Task LoadData(LoadDataArgs args)
    {
        var sortParts = args.OrderBy?.Split(' ');
        var sortBy = sortParts?.FirstOrDefault();
        var sortDir = sortParts?.ElementAtOrDefault(1) ?? "asc";

        var page = (args.Skip / args.Top) + 1;
        var pageSize = args.Top;

        var endpoint = $"Company/all?sortBy={sortBy}&sortDir={sortDir}&page={page}&pageSize={pageSize}";
        var response = await ApiService.GetAsync<PagedResult<CompanyReadModel>>(endpoint);

        if (response.IsSuccess && response.Data != null)
        {
            companies = response.Data.Items;
            totalCount = response.Data.TotalCount;
        }
    }
}
